library std;
use std.standard.all;

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity mem is
port (
      mem_a : in std_logic_vector(15 downto 0);
		rd_en: in std_logic;
		clk : in std_logic;
		inst_out : out std_logic_vector(15 downto 0));
end entity mem;

architecture desc of mem is
type memarr is array(0 to 40) of std_logic_vector(15 downto 0);
signal RAM : memarr := ("0000000000000000" ,  others => X"0000");
signal addr : std_logic_vector(15 downto 0);

begin
addr <= mem_a(15 downto 0);

process(rd_en,wr_en,clk,addr)
begin
  if rd_en = '1' then
  mem_out <= RAM(to_integer(unsigned(addr)));
  elsif rising_edge(clk) then
   
  end if;
end process;
end architecture;